{"version":3,"sources":["components/Header.js","helpers/date.js","components/EarthquakeItem.js","components/EarthquakeList.js","components/Landing.js","components/Profile.js","components/Details.js","components/Main.js","components/App.js","index.js"],"names":["Header","className","style","display","background","padding","lineHeight","height","to","alt","src","fontSize","fontWeight","color","textAlign","data","profile","firstName","convertDate","time","dateString","Date","timeOfDay","toString","split","splice","join","month","getMonth","suffix","formattedDateString","getDay","getFullYear","standardHour","EarthquakeItem","props","useEffect","id","earthquake","properties","onClick","selectLineItemProps","place","mag","EarthquakeList","earthquakes","toggleHeaderProps","map","Landing","useState","features","setEarthquakes","sortConfig","setSortConfig","history","useHistory","localStorage","setItem","JSON","stringify","push","header","newOrder","sort","a","b","Profile","parse","getItem","avatarImage","lastName","phone","email","bio","EarthquakeDetails","quakeInfo","setQuakeInfo","location","useLocation","console","log","propsId","pathname","filter","quake","status","tsunami","type","Main","exact","path","component","Details","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ad84dac.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from 'react-router-dom';\n\nimport data from '../json/earthquakes.json';\n\nimport \"../css/header.css\";\n\nconst Header = () => {\n\n  const headerStyle = {\n    display: \"flex\",\n    background: \"#ededed\",\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n    height: \"100px\",\n  }\n  // Just doing different stlye methods here, however I prefer to make a new file when needed.\n  return (\n    <div>\n      <header className='header' style={headerStyle}>\n        <Link className='homeLink' to='/zen-garden'><img className='homeLinkImg' alt='Home' src='https://www.realtor.com/realtor-com.png'></img></Link>\n        <h1 style={{ fontSize: \"2rem\", fontWeight: \"600\", lineHeight: \"1em\", color: \"#777777\", textAlign: \"center\" }}>Earthquake Zen Garden</h1>\n        <Link className='profileLink' to='/profile'>Welcome {data.profile.firstName}</Link>\n      </header>\n    </div>\n  )\n}\n\nexport default Header","// Formatting Date to specs.\nexport function convertDate(time) {\n    const dateString = new Date(time);\n    const timeOfDay = dateString.toString().split(' ').splice(4,1)[0].split(':').splice(0,2).join(':').toString();\n    const month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"][dateString.getMonth()];\n    let suffix = 'AM';\n\n    let formattedDateString = `${month} ${dateString.getDay()}, ${dateString.getFullYear()}, ${timeOfDay} ${suffix}`;\n\n    if (timeOfDay.split(':')[0] > 12) {\n        suffix = 'PM';\n        const standardHour = `${timeOfDay.split(':').splice(0,1).toString() -12}:${timeOfDay.split(':').splice(1,1).toString()}`\n        formattedDateString = `${month} ${dateString.getDay()}, ${dateString.getFullYear()}, ${standardHour} ${suffix}`;\n    }\n    return formattedDateString;\n}\n","import React, { useEffect } from \"react\"\nimport { convertDate } from '../helpers/date'\n\nimport \"../css/earthquakeItem.css\"\n\nconst EarthquakeItem = props => {\n\n  useEffect(() => {\n    return () => {}\n  }, [])\n\n  const { id } = props.earthquake;\n  const { time } = props.earthquake.properties;\n\n  const formattedDateString = convertDate(time);\n  \n  return (\n    <div className='itemContainer'>\n        <button className='linkButton' onClick={() => props.selectLineItemProps(id)}>{props.earthquake.properties.place}</button>\n        <p className='linkMag'>{props.earthquake.properties.mag}</p>\n        <p className='linkTime'>{formattedDateString}</p>\n    </div>\n  )\n}\n\nexport default EarthquakeItem","import React from \"react\"\nimport EarthquakeItem from \"./EarthquakeItem\"\n\nimport \"../css/earthquakeList.css\"\n\nconst EarthquakeList = props => {\n  if(props.earthquakes) {\n    return (\n      <ul>\n        <div className='headerBlock'>\n          <p className='listHeader'>Title</p>\n          <p onClick={() => props.toggleHeaderProps('mag')} className='listHeader'>Magnitude</p>\n          <p onClick={() => props.toggleHeaderProps('time')} className='listHeader'>Time</p>\n        </div>\n  \n        {props.earthquakes.map(earthquake => (\n          <EarthquakeItem\n            key={earthquake.id}\n            earthquake={earthquake}\n            selectLineItemProps={props.selectLineItemProps}\n          />\n        ))}\n      </ul>\n    )  \n  } else {\n    return (\n      <p>Loading...</p>\n    )\n  }\n\n}\nexport default EarthquakeList","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport EarthquakeList from \"./EarthquakeList\"\n\nimport data from '../json/earthquakes.json';\nimport \"../css/landing.css\"\n\nconst Landing = () => {\n  const [earthquakes, setEarthquakes] = useState(data.data.features)\n  const [sortConfig, setSortConfig] = useState(false);\n  const history = useHistory();\n\n  function setProfileInfo() {\n    // Set profile data to local storage to a save request.\n    localStorage.setItem(\"profile\", JSON.stringify(data.profile))\n  }\n\n  useEffect(() => {\n    setProfileInfo()\n  }, [])\n\n  const selLineItem = id => {\n    history.push(`/details/${id}`);\n  }\n\n  // Wanted to do more here and make the title sortable.\n  const toggleHeader = header => {\n    let newOrder = [];\n    newOrder = earthquakes.sort((a,b) => {\n      setSortConfig(true);\n      if (sortConfig === true) {\n        setSortConfig(false);\n        return b.properties[header] - a.properties[header];\n      }\n      return a.properties[header] - b.properties[header];\n    })\n    setEarthquakes([...newOrder]);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"inner\">\n        <h3 className='LandingHeader'>USGS All Earthquakes, Past Hour</h3>\n        <EarthquakeList\n            earthquakes={earthquakes}\n            selectLineItemProps={selLineItem}\n            toggleHeaderProps={toggleHeader}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Landing","import React from \"react\"\n\nimport data from '../json/earthquakes.json';\n\nimport \"../css/profile.css\"\n\nconst Profile = () => {\n\n  const profile = JSON.parse(localStorage.getItem('profile'));\n\n  // If the local storage doesn't have profile data, we need to get it.\n  if(!profile.avatarImage) {\n    localStorage.setItem(\"profile\", JSON.stringify(data.profile));\n  }\n\n  return (\n    <div>\n      <h4 className='profileHeader'>Profile</h4>\n      <div className='profileContainer'>\n        <div className='imgDiv'>\n          <img className='profileImg' alt='' src={profile.avatarImage}></img>\n        </div>\n        <div className='profileTitles'>\n          <p className='title'>First Name</p>\n          <p className='title'>Last Name</p>\n          <p className='title'>Phone</p>\n          <p className='title'>Email</p>\n          <p className='title'>Bio</p>\n        </div>\n        <div className='profileInfo'>\n          <p className='info'>{profile.firstName}</p>\n          <p className='info'>{profile.lastName}</p>\n          <p className='info'>{profile.phone}</p>\n          <p className='info'>{profile.email}</p>\n          <p className='info'>{profile.bio}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Profile\n","import React, { useState, useEffect } from \"react\"\nimport { useLocation } from 'react-router-dom';\nimport { convertDate } from '../helpers/date'\n\nimport data from '../json/earthquakes.json';\n\nimport \"../css/details.css\"\n\nconst EarthquakeDetails = () => {\n  const [earthquakes] = useState(data.data.features)\n\n  const [quakeInfo, setQuakeInfo] = useState([data.data.features[0]])\n  const location = useLocation();\n  console.log(quakeInfo)\n  useEffect(() => {\n    const propsId = location.pathname.split('/')[2];\n    console.log(propsId);\n    if (propsId) {\n      setQuakeInfo(earthquakes.filter(function (quake) { \n        return quake.id === propsId; \n      }))\n    }\n    return () => {\n    }\n  }, [earthquakes, location.pathname])\n  if (!quakeInfo) {\n    return (\n      <div>\n        <p>Loading....</p>\n      </div>\n    )\n  } else {\n    return (\n    <div>\n      <h4 className='deatilsHeader'>{quakeInfo[0].properties.place}</h4>\n      <div className='detailsContainer'>\n        <div className='detailsTitles'>\n          <p className='title'>Title</p>\n          <p className='title'>Magnitude</p>\n          <p className='title'>Time</p>\n          <p className='title'>Status</p>\n          <p className='title'>Tsunami</p>\n          <p className='title'>Type</p>\n        </div>\n        <div className='detailsInfo'>\n          <p className='info'>{quakeInfo[0].properties.place}</p>\n          <p className='info'>{quakeInfo[0].properties.mag}</p>\n          <p className='info'>{convertDate(quakeInfo[0].properties.time)}</p>\n          <p className='info'>{quakeInfo[0].properties.status}</p>\n          <p className='info'>{quakeInfo[0].properties.tsunami}</p>\n          <p className='info'>{quakeInfo[0].properties.type}</p>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default EarthquakeDetails","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Landing from './Landing'\nimport Profile from './Profile'\nimport Details from './Details'\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/zen-garden' component={Landing}/>\n      <Route path='/profile' component={Profile}/>\n      <Route path='/details/:id' component={Details}/>\n    </Switch>\n  </main>\n)\n\nexport default Main\n","import React from 'react'\nimport Header from './Header'\nimport Main from './Main'\n\nconst App = () => (\n  <div>\n    <Header />\n    <Main />\n  </div>\n)\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from './components/App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}